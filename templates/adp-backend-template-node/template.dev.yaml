apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: adp-backend-template-node-dev
  title: "ADP Backend Template Node DEV"
  description: "Template to support rapid delivery of microservices for ADP Platform. It contains the configuration needed to deploy a simple Hapi Node server to the Azure Kubernetes Platform."
  tags:
    - node
    - hapi
    - aks
    - backend
spec:
  owner: adp
  type: backend

  parameters:
    - title: Component Information
      description: Enter properties describing this component.
      required:
        - component_id
        - description
        - owner
        - component_lifecycle
        - app_infra_service_bus_check
        - app_infra_postgres_db_check
      properties:
        component_id:
          title: Component Name
          type: string
          description: Unique name of the component which will be used for the repository, package, and image names. This should be in the format <program>-<workstream>-<repo>. Maximum 64 characters.
          ui:field: EntityNamePicker
          ui:autofocus: true

        description:
          title: Description
          type: string
          description: Describe what this component does. This description will be used in the component's README and package.json.

        system:
          title: System
          type: string
          description: Select the system that this component will be a part of. Systems are a collection of related components and resources.
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              - kind: System

        component_lifecycle:
          title: Project Phase
          type: string
          description: Select the project phase which suits this component. Refer to the [GDS service manual](https://www.gov.uk/service-manual/agile-delivery) for more information.
          default: alpha
          enum:
            - discovery
            - alpha
            - beta
          enumNames:
            - Discovery
            - Alpha
            - Beta

        owner:
          title: Owner
          type: string
          description: Select the team who will own this component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: delivery-project

        app_infra_service_bus_check:
          title: Do you need an Azure Service Bus Queue or Topic?
          type: string
          description: Select the resource you need to get started. If not, select none. (These resources are just to get started. More resources can be added later to code by developers.)
          default: none
          enum:
            - queue
            - topic
            - none
          enumNames:
            - Queue
            - Topic
            - None

        app_infra_postgres_db_check:
          title: Do you need an Azure PostgreSQL Database?
          type: string
          description: Select if a database is required. (These resources are just to get started. More resources can be added later to code by developers.)
          default: no
          enum:
            - yes
            - no
          enumNames:
            - Yes
            - No

      dependencies:
        app_infra_service_bus_check:
          allOf:
            - if:
                properties:
                  app_infra_service_bus_check:
                    const: queue
              then:
                properties:
                  app_infra_service_bus_resource_name:
                    title: Azure Service Bus Queue Name
                    type: string
                    description: Provide the Azure Service Bus Queue name.
                  app_infra_service_bus_resource_type:
                    title: Pub-Sub Type
                    type: string
                    description: Select if it is a publisher or subscriber.
                    default: none
                    enum:
                      - publisher
                      - subscriber
                    enumNames:
                      - Publisher
                      - Subscriber
                required:
                  - app_infra_service_bus_resource_name
                  - app_infra_service_bus_resource_type
            - if:
                properties:
                  app_infra_service_bus_check:
                    const: topic
              then:
                properties:
                  app_infra_service_bus_resource_name:
                    title: Azure Service Bus Topic Name
                    type: string
                    description: Provide the Azure Service Bus Topic name.
                  app_infra_service_bus_resource_type:
                    title: Pub-Sub Type
                    type: string
                    description: Select if it is a publisher or subscriber.
                    default: none
                    enum:
                      - publisher
                      - subscriber
                    enumNames:
                      - Publisher
                      - Subscriber
                required:
                  - app_infra_service_bus_resource_name
                  - app_infra_service_bus_resource_type

        app_infra_postgres_db_check:
          allOf:
            - if:
                properties:
                  app_infra_postgres_db_check:
                    const: yes
              then:
                properties:
                  app_infra_postgres_db_resource_name:
                    title: Database Name
                    type: string
                    description: Provide the database name.
                required:
                  - app_infra_postgres_db_resource_name

    - $yaml: ../parameters/git-repository.yaml

    - $yaml: ../parameters/ci-cd.yaml

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          service_name: ${{ parameters.component_id }}
          project_name: ${{ parameters.owner | parseEntityRef | pick('name') }}
          ado_project_name: ${{ parameters.ado_project }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          workstream: ${{ parameters.owner | parseEntityRef | pick('name') }}
          repo_url: ${{ parameters.repo_name | githubRepoUrl }}
          repo_project_slug: ${{ parameters.repo_name | githubRepoUrl | projectSlug }}
          component_lifecycle: ${{ parameters.component_lifecycle }}
          system: ${{ parameters.system }}
          app_infra_service_bus_check: ${{ parameters.app_infra_service_bus_check }}
          app_infra_service_bus_resource_name: ${{ parameters.app_infra_service_bus_resource_name }}
          app_infra_service_bus_resource_type: ${{ parameters.app_infra_service_bus_resource_type }}
          app_infra_postgres_db_check: ${{ parameters.app_infra_postgres_db_check }}
          app_infra_postgres_db_resource_name: ${{ parameters.app_infra_postgres_db_resource_name }}

    - id: publish
      name: Publish
      action: publish:zip

  output:
    links:
      - title: Download
        url: ${{ steps.publish.output.dataUri }}
        icon: github
