apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: adp-backend-template-node
  title: "ADP Backend Template Node"
  description: "Template to support rapid delivery of microservices for ADP Platform. It contains the configuration needed to deploy a simple Hapi Node server to the Azure Kubernetes Platform."
  tags:
    - node
    - hapi
    - aks
    - backend
spec:
  owner: adp
  type: backend

  parameters:
    - title: Component Information
      description: Enter properties describing this component.
      required:
        - component_id
        - description
        - owner
        - component_lifecycle
      properties:
        component_id:
          title: Component Name
          type: string
          description: Unique name of the component which will be used for the repository, package, and image names. This should be in the format <program>-<workstream>-<repo>. Maximum 64 characters.
          ui:field: EntityNamePicker
          ui:autofocus: true

        description:
          title: Description
          type: string
          description: Describe what this component does. This description will be used in the component's README and package.json.

        system:
          title: System
          type: string
          description: Select the system that this component will be a part of. Systems are a collection of related components and resources.
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              - kind: System

        component_lifecycle:
          title: Project Phase
          type: string
          description: Select the project phase which suits this component. Refer to the [GDS service manual](https://www.gov.uk/service-manual/agile-delivery) for more information.
          default: alpha
          enum:
            - discovery
            - alpha
            - beta
          enumNames:
            - Discovery
            - Alpha
            - Beta

        owner:
          title: Owner
          type: string
          description: Select the team who will own this component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: team

    - title: Git Repository
      description: |
        To encourage coding in the open the repository will be public by default. Refer to the [GDS service manual](https://www.gov.uk/service-manual/technology/making-source-code-open-and-reusable) for more information.

        The scaffolder will create a new repository and an associated team with write permissions.
      required:
        - repo_url
        - github_team_name
        - github_team_users
        - github_team_visibility
      properties:
        repo_url:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - defra
              - defra-adp-sandpit

        github_team_name:
          title: GitHub Team Name
          type: string
          description: This team will be granted Write access to the repository.

        github_team_description:
          title: GitHub Team Description
          type: string
          description: An optional description of the team.

        github_team_users:
          title: GitHub Team Members
          type: string
          description: Comma-separated list of GitHub usernames to be added to the team.

        github_team_visibility:
          title: GitHub Team Visibility
          type: string
          description: The privacy level this team should have. *Visible* teams can be seen by all members in the organization. *Secret* teams can only be seen by the organization owners and team members.
          default: closed
          enum:
            - closed
            - secret
          enumNames:
            - Visible
            - Secret

    - title: CI/CD
      description: CI/CD pipelines will be created in Azure DevOps
      required:
        - ado_organization
        - ado_project
        - service_connection_name
        - pipeline_folder
      properties:
        ado_organization:
          title: Azure DevOps Organization
          type: string
          default: defragovuk
        ado_project:
          title: Azure DevOps Project
          type: string
        service_connection_name:
          title: Service Connection Name
          type: string
          description: Name of the Service Connection used to connect to GitHub.
          default: DEFRA
        pipeline_folder:
          title: Pipeline Folder
          type: string
          description: Folder path where the pipeline will be created
          default: /

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          project_name: ${{ parameters.component_id }}
          ado_project_name: ${{ parameters.ado_project }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          workstream: ${{ parameters.owner | parseEntityRef | pick('name') }}
          repo_url: ${{ parameters.repo_url }}
          repo_project_slug: ${{ parameters.repo_url | projectSlug }}
          component_lifecycle: ${{ parameters.component_lifecycle }}
          system: ${{ parameters.system }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repo_url }}
        requireCodeOwnerReviews: true
        dismissStaleReviews: true
        requiredConversationResolution: true
        requiredStatusCheckContexts: []
        repoVisibility: public
        defaultBranch: main
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        gitAuthorName: ${{ user.entity.metadata.name }}
        requiredCommitSigning: true

    - id: createGitHubTeam
      name: Create GitHub Team
      action: adp:github:team:create
      input:
        githubTeamName: ${{ parameters.github_team_name }}
        githubTeamDescription: ${{ parameters.github_team_description }}
        orgName: ${{ parameters.repo_url | parseRepoUrl | pick('owner') }}
        users: ${{ parameters.github_team_users }}
        visibility: ${{ parameters.github_team_visibility }}

    - id: addGitHubTeam
      name: Add GitHub Team to Repository
      action: adp:github:team:add
      input:
        teamNames: ${{ parameters.github_team_name }}
        repoName: ${{ parameters.repo_url | parseRepoUrl | pick('repo') }}
        orgName: ${{ parameters.repo_url | parseRepoUrl | pick('owner') }}
        owner: ${{ parameters.repo_url | parseRepoUrl | pick('owner') }}
        permission: push

    - id: configureAdoProject
      name: Configure Azure DevOps Project
      action: http:backstage:request
      input:
        method: PATCH
        path: /proxy/adp-portal-api/AdoProject/${{ parameters.ado_project }}/onboard
        headers:
          content-type: 'application/json'
        body:
          environments:
          - name: SND3
            description: SND environment
          - name: DEV1
            description: DEV1 environment
          - name: TST1
            description: TST1 environment
          - name: TST2
            description: TST2 environment
          - name: PRE1
            description: PRE1 environment
          - name: PRD1
            description: PRD1 environment
          serviceConnections:
          - AZD-ADP-SND1
          - AZD-ADP-SND2
          - AZD-ADP-SND3
          - AZD-ADP-SSV3
          - AZD-ADP-DEV1
          - AZD-ADP-TST1
          - AZD-ADP-PRE1
          - AZD-ADP-SNYK
          - Defra-ADP-Github
          - DEFRA-ADP-SonarCloud
          agentPools:
          - DEFRA-ADP-SND1-ubuntu2204
          - DEFRA-ADP-SND3-ubuntu2204
          - DEFRA-ADP-DEV1-ubuntu2204
          - DEFRA-ADP-TST1-ubuntu2204
          - DEFRA-ADP-PRE1-ubuntu2204
          variableGroups:
          - name: ${{ parameters.component_id }}-snd3
            description: Variables for the ${{ parameters.component_id }} service
            variables:
            - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
              value: TEST
              isSecret: true
          - name: ${{ parameters.component_id }}-dev1
            description: Variables for the ${{ parameters.component_id }} service
            variables:
            - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
              value: TEST
              isSecret: true
          - name: ${{ parameters.component_id }}-tst1
            description: Variables for the ${{ parameters.component_id }} service
            variables:
            - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
              value: TEST
              isSecret: true
          - name: ${{ parameters.component_id }}-tst2
            description: Variables for the ${{ parameters.component_id }} service
            variables:
            - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
              value: TEST
              isSecret: true
          - name: ${{ parameters.component_id }}-pre1
            description: Variables for the ${{ parameters.component_id }} service
            variables:
            - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
              value: TEST
              isSecret: true
          - name: ${{ parameters.component_id }}-prd1
            description: Variables for the ${{ parameters.component_id }} service
            variables:
            - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
              value: TEST
              isSecret: true

    - id: getServiceConnection
      name: Get ADO Service Connection
      action: adp:azure:serviceconnection:get
      if: ${{ steps.configureAdoProject.output.code == 204 }}
      input:
        organization: ${{ parameters.ado_organization }}
        project: ${{ parameters.ado_project }}
        serviceConnectionName: ${{ parameters.service_connection_name }}

    - id: createPipeline
      name: Create CI Pipeline
      action: adp:azure:pipeline:create
      if: ${{ steps.configureAdoProject.output.code == 204 }}
      input:
        organization: ${{ parameters.ado_organization }}
        project: ${{ parameters.ado_project }}
        folder: ${{ parameters.pipeline_folder }}
        repositoryName: ${{ parameters.repo_url | projectSlug }}
        yamlPath: .azuredevops/build.yaml
        serviceConnectionId: ${{ steps.getServiceConnection.output.serviceConnectionId }}
        pipelineName: ${{ parameters.component_id }}

    - id: permitResources
      name: Permit Pipeline Resources
      action: adp:azure:pipeline:permit
      if: ${{ steps.configureAdoProject.output.code == 204 }}
      input:
        organization: ${{ parameters.ado_organization }}
        project: ${{ parameters.ado_project }}
        pipelineId: ${{ steps.createPipeline.output.pipelineId }}
        resources:
          # Snyk
          - resourceId: 663a60df-6aaa-4c2c-9fcd-ac4251732e87
            resourceType: endpoint
            authorized: true

            # SSV3
          - resourceId: 8e5ae2d4-31c5-4031-9ca8-54cc7b4f22d9
            resourceType: endpoint
            authorized: true

            # SND1
          - resourceId: dacc3c71-9384-4a93-b26d-a34d690a9a43
            resourceType: endpoint
            authorized: true

            # GitHub - Defra-ADP-Github
          - resourceId: c275835f-49eb-4718-b00a-14abe324b6bc
            resourceType: endpoint
            authorized: true

            # GitHub - DEFRA
          - resourceId: c7b55e44-8406-4bb3-bf47-c03c3bebe452
            resourceType: endpoint
            authorized: true

            # SonarCloud - DEFRA-ADP-SonarCloud
          - resourceId: ee6f72f7-4a3c-4c83-a7fe-4bd75045570f
            resourceType: endpoint
            authorized: true

            # Variable Group - NodeJSAppBuild
          - resourceId: '449'
            resourceType: variablegroup
            authorized: true

          # Agent group
          - resourceId: '3072'
            resourceType: queue
            authorized: true

    - id: runPipeline
      name: Run CI Pipeline
      action: adp:azure:pipeline:run
      if: ${{ steps.configureAdoProject.output.code == 204 }}
      input:
        organization: ${{ parameters.ado_organization }}
        pipelineId: ${{ steps.createPipeline.output.pipelineId }}
        project: ${{ parameters.ado_project }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
        icon: github
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - title: CI Pipeline
        url: ${{ steps.createPipeline.output.pipelineUrl }}
        icon: pipeline
