apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: adp-backend-template-node
  title: "ADP Backend Template Node"
  description: "Template to support rapid delivery of microservices for ADP Platform. It contains the configuration needed to deploy a simple Hapi Node server to the Azure Kubernetes Platform."
  tags:
    - node
    - hapi
    - aks
    - backend
spec:
  owner: adp
  type: backend

  parameters:
    - title: Component Information
      description: Enter properties describing this component.
      required:
        - component_id
        - description
        - owner
        - component_lifecycle
        - app_infra_service_bus_check
        - app_infra_postgres_db_check
      properties:
        component_id:
          title: Component Name
          type: string
          description: Unique name of the component which will be used for the repository, package, and image names. This should be in the format <program>-<workstream>-<repo>. Maximum 64 characters.
          ui:field: EntityNamePicker
          ui:autofocus: true

        description:
          title: Description
          type: string
          description: Describe what this component does. This description will be used in the component's README and package.json.

        system:
          title: System
          type: string
          description: Select the system that this component will be a part of. Systems are a collection of related components and resources.
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              - kind: System

        component_lifecycle:
          title: Project Phase
          type: string
          description: Select the project phase which suits this component. Refer to the [GDS service manual](https://www.gov.uk/service-manual/agile-delivery) for more information.
          default: alpha
          enum:
            - discovery
            - alpha
            - beta
          enumNames:
            - Discovery
            - Alpha
            - Beta

        owner:
          title: Owner
          type: string
          description: Select the team who will own this component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              - kind: Group
                spec.type: delivery-project

        app_infra_service_bus_check:
          title: Do you need an Azure Service Bus Queue or Topic?
          type: string
          description: Select the resource you need to get started. If not, select none. (These resources are just to get started. More resources can be added later to code by developers.)
          default: none
          enum:
            - queue
            - topic
            - none
          enumNames:
            - Queue
            - Topic
            - None

        app_infra_postgres_db_check:
          title: Do you need an Azure PostgreSQL Database?
          type: string
          description: Select if a database is required. (These resources are just to get started. More resources can be added later to code by developers.)
          default: no
          enum:
            - yes
            - no
          enumNames:
            - Yes
            - No

      dependencies:
        app_infra_service_bus_check:
          allOf:
            - if:
                properties:
                  app_infra_service_bus_check:
                    const: queue
              then:
                properties:
                  app_infra_service_bus_resource_name:
                    title: Azure Service Bus Queue Name
                    type: string
                    description: Provide the Azure Service Bus Queue name.
                  app_infra_service_bus_resource_type:
                    title: Pub-Sub Type
                    type: string
                    description: Select if it is a publisher or subscriber.
                    default: none
                    enum:
                      - publisher
                      - subscriber
                    enumNames:
                      - Publisher
                      - Subscriber
                required:
                  - app_infra_service_bus_resource_name
                  - app_infra_service_bus_resource_type
            - if:
                properties:
                  app_infra_service_bus_check:
                    const: topic
              then:
                properties:
                  app_infra_service_bus_resource_name:
                    title: Azure Service Bus Topic Name
                    type: string
                    description: Provide the Azure Service Bus Topic name.
                  app_infra_service_bus_resource_type:
                    title: Pub-Sub Type
                    type: string
                    description: Select if it is a publisher or subscriber.
                    default: none
                    enum:
                      - publisher
                      - subscriber
                    enumNames:
                      - Publisher
                      - Subscriber
                required:
                  - app_infra_service_bus_resource_name
                  - app_infra_service_bus_resource_type

        app_infra_postgres_db_check:
          allOf:
            - if:
                properties:
                  app_infra_postgres_db_check:
                    const: yes
              then:
                properties:
                  app_infra_postgres_db_resource_name:
                    title: Database Name
                    type: string
                    description: Provide the database name.
                required:
                  - app_infra_postgres_db_resource_name

    - $yaml: ../parameters/git-repository.yaml

    - $yaml: ../parameters/ci-cd.yaml

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          service_name: ${{ parameters.component_id }}
          project_name: ${{ parameters.owner | parseEntityRef | pick('name') }}
          ado_project_name: ${{ parameters.ado_project }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          workstream: ${{ parameters.owner | parseEntityRef | pick('name') }}
          repo_url: ${{ parameters.repo_url }}
          repo_project_slug: ${{ parameters.repo_url | projectSlug }}
          component_lifecycle: ${{ parameters.component_lifecycle }}
          system: ${{ parameters.system }}
          app_infra_service_bus_check: ${{ parameters.app_infra_service_bus_check }}
          app_infra_service_bus_resource_name: ${{ parameters.app_infra_service_bus_resource_name }}
          app_infra_service_bus_resource_type: ${{ parameters.app_infra_service_bus_resource_type }}
          app_infra_postgres_db_check: ${{ parameters.app_infra_postgres_db_check }}
          app_infra_postgres_db_resource_name: ${{ parameters.app_infra_postgres_db_resource_name }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repo_url }}
        requireCodeOwnerReviews: true
        dismissStaleReviews: true
        requiredConversationResolution: true
        requiredStatusCheckContexts: []
        repoVisibility: public
        defaultBranch: main
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        gitAuthorName: ${{ user.entity.metadata.name }}
        requiredCommitSigning: true

    - id: addGitHubTeam
      name: Add GitHub Teams to Repository
      action: adp:github:team:add:deliveryproject
      input:
        projectName: ${{ parameters.owner | parseEntityRef | pick('name') }}
        repoName: ${{ parameters.repo_url | parseRepoUrl | pick('repo') }}
        orgName: ${{ parameters.repo_url | parseRepoUrl | pick('owner') }}
        owner: ${{ parameters.repo_url | parseRepoUrl | pick('owner') }}

    - id: registerFluxService
      name: Register Service in Flux config
      action: http:backstage:request
      input:
        method: POST
        path: /proxy/adp-portal-api/FluxTeamConfig/${{ parameters.owner | parseEntityRef | pick('name') }}/services
        headers:
          content-type: "application/json"
        body:
          name: ${{ parameters.component_id }}
          isFrontEnd: false
          environments:
            - snd3
            - snd4
            - dev1
            - tst1
            - tst2
            - pre1
            - prd1
          configVariables:
            POSTGRES_DB: ${{ (parameters.owner | parseEntityRef | pick('name')) + '-' + parameters.app_infra_postgres_db_resource_name if parameters.app_infra_postgres_db_check == 'yes' else undefined }}

    - id: generateServiceManifests
      name: Generate Service (Flux) Manifests
      action: http:backstage:request
      input:
        method: POST
        path: /proxy/adp-portal-api/FluxTeamConfig/${{ parameters.owner | parseEntityRef | pick('name') }}/generate?serviceName=${{ parameters.component_id }}
        headers:
          content-type: "application/json"

    - id: configureAdoProject
      name: Configure Azure DevOps Project
      action: http:backstage:request
      input:
        method: PATCH
        path: /proxy/adp-portal-api/AdoProject/${{ parameters.ado_project }}/onboard
        headers:
          content-type: "application/json"
        body:
          environments:
            - name: SND3
              description: SND environment
            - name: SND4
              description: SND environment
            - name: DEV1
              description: DEV1 environment
            - name: TST1
              description: TST1 environment
            - name: TST2
              description: TST2 environment
            - name: PRE1
              description: PRE1 environment
            - name: PRD1
              description: PRD1 environment
          serviceConnections:
            - AZD-ADP-SND1
            - AZD-ADP-SND2
            - AZD-ADP-SND3
            - AZR-ADP-SND4
            - AZD-ADP-SSV3
            - AZD-ADP-SSV5
            - AZR-ADP-DEV1
            - AZR-ADP-TST1
            - AZR-ADP-PRE1
            - AZR-ADP-PRD1
            - AZD-ADP-SNYK
            - Defra-ADP-Github
            - DEFRA-ADP-SonarCloud
            - DEFRA
          agentPools:
            - DEFRA-ADP-SND1-ubuntu2204
            - DEFRA-ADP-SND3-ubuntu2204
            - DEFRA-ADP-SND4-ubuntu2204
            - DEFRA-ADP-DEV1-ubuntu2204
            - DEFRA-ADP-TST1-ubuntu2204
            - DEFRA-ADP-PRE1-ubuntu2204
            - DEFRA-ADP-PRD1-ubuntu2204
          variableGroups:
            - name: ${{ parameters.component_id }}-snd3
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true
            - name: ${{ parameters.component_id }}-snd4
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true
            - name: ${{ parameters.component_id }}-dev1
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true
            - name: ${{ parameters.component_id }}-tst1
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true
            - name: ${{ parameters.component_id }}-tst2
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true
            - name: ${{ parameters.component_id }}-pre1
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true
            - name: ${{ parameters.component_id }}-prd1
              description: Variables for the ${{ parameters.component_id }} service
              variables:
                - name: ${{ parameters.component_id }}-APPINSIGHTS-CONNECTIONSTRING
                  value: TEST
                  isSecret: true

    - id: logConfigureAdoProjectReponse
      name: Log Azure DevOps Project Configuration
      action: debug:log
      input:
        message: |
          Response Code: ${{ steps.configureAdoProject.output.code }}
          Response: ${{ steps.configureAdoProject.output.body | dump }}

    - id: getServiceConnection
      name: Get ADO Service Connection
      action: adp:azure:serviceconnection:get
      if: ${{ steps.configureAdoProject.output.code == 200 }}
      input:
        organization: ${{ parameters.ado_organization }}
        project: ${{ parameters.ado_project }}
        serviceConnectionName: ${{ parameters.service_connection_name }}

    - id: createPipeline
      name: Create CI Pipeline
      action: adp:azure:pipeline:create
      if: ${{ steps.configureAdoProject.output.code == 200 }}
      input:
        organization: ${{ parameters.ado_organization }}
        project: ${{ parameters.ado_project }}
        folder: ${{ parameters.pipeline_folder }}
        repositoryName: ${{ parameters.repo_url | projectSlug }}
        yamlPath: .azuredevops/build.yaml
        serviceConnectionId: ${{ steps.getServiceConnection.output.serviceConnectionId }}
        pipelineName: ${{ parameters.component_id }}

    - id: permitResources
      name: Permit Pipeline Resources
      action: adp:azure:pipeline:permit
      if: ${{ steps.configureAdoProject.output.code == 200 }}
      input:
        organization: ${{ parameters.ado_organization }}
        project: ${{ parameters.ado_project }}
        pipelineId: ${{ steps.createPipeline.output.pipelineId }}
        resources: ${{ steps.configureAdoProject.output.body }}

    - id: runPipeline
      name: Run CI Pipeline
      action: adp:azure:pipeline:run
      if: ${{ steps.configureAdoProject.output.code == 200 }}
      input:
        organization: ${{ parameters.ado_organization }}
        pipelineId: ${{ steps.createPipeline.output.pipelineId }}
        project: ${{ parameters.ado_project }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
        icon: github
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - title: CI Pipeline
        url: ${{ steps.createPipeline.output.pipelineUrl }}
        icon: pipeline
