apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: adp-helm-only-template
  title: ADP Helm Only Template
  description: Deploy a HELM Only repository for micro-frontends and mergeable ingresses. This creates a HELM only repository with some basic configuration and a pipeline without any app code. This allows you to use a single URL for multiple different frontend repositories
  tags:
    - helm
spec:
  owner: ccts-adp
  type: helm
  parameters:
    - $yaml: ./parameters.yaml
    - $yaml: ../parameters/git-repository.yaml
    - $yaml: ../parameters/ci-cd.yaml
  steps:
    - $yaml: ./run-template.yaml
    - $yaml: ../steps/github-publish.yaml
    - $yaml: ../steps/github-team.yaml
    - id: registerFluxService
      name: Register Service in Flux config
      action: adp:registerFluxService
      input:
        parameters:
          teamName: ${{ parameters.owner | parseEntityRef | pick('name') }}
        body:
          name: ${{ parameters.component_id }}
          isFrontEnd: true
          isHelmOnly: true
          environments:
            - snd3
            - snd4
            - dev1
            - tst1
            - tst2
            - pre1
            - prd1
          configVariables:
            INGRESS_ENDPOINT: ${{ parameters.endpoint }}
    - $yaml: ../steps/generate-service-manifests.yaml
    - $yaml: ../steps/ado-configure.yaml
    - $yaml: ../steps/ado-log-configure.yaml
    - $yaml: ../steps/ado-get-service-connection.yaml
    - $yaml: ../steps/ado-create-pipeline.yaml
    - $yaml: ../steps/ado-permit-resources.yaml
    - $yaml: ../steps/ado-run-pipeline.yaml
    - $yaml: ../steps/catalog-register.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
        icon: github
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - title: CI Pipeline
        url: ${{ steps.createPipeline.output.pipelineUrl }}
        icon: pipeline
